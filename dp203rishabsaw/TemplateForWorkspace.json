{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "dp203rishabsaw"
		},
		"dp203rishabsaw-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dp203rishabsaw-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:dp203rishabsaw.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"dp203rishabsaw-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dp203rishabsa.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/dp203apache')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dp203apache1')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopyPipeline_CSV')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_kn4",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "files/sales_data/poscsv/"
							},
							{
								"name": "Destination",
								"value": "dbo.SalesDataCSV"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"writeBehavior": "Upsert",
								"upsertSettings": {
									"keys": [
										"sale_id",
										"product_id"
									],
									"interimSchemaName": ""
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sale_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sale_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "product_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "quantity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "quantity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "price",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "total_amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "total_amount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sale_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sale_date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "region",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_kn4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_kn4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-11T07:19:58Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_kn4')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_kn4')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopyPipeline_JSON')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_4uf",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "files/sales_data/onlinetransaction/"
							},
							{
								"name": "Destination",
								"value": "dbo.SalesDataJSON"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"writeBehavior": "Upsert",
								"upsertSettings": {
									"keys": [
										"sale_id",
										"product_id"
									],
									"interimSchemaName": ""
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['sale_id']"
										},
										"sink": {
											"name": "sale_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['product_id']"
										},
										"sink": {
											"name": "product_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['product_name']"
										},
										"sink": {
											"name": "product_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['quantity']"
										},
										"sink": {
											"name": "quantity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['price']"
										},
										"sink": {
											"name": "price",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['total_amount']"
										},
										"sink": {
											"name": "total_amount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sale_date']"
										},
										"sink": {
											"name": "sale_date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['region']"
										},
										"sink": {
											"name": "region",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_4uf",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_4uf",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-11T07:29:44Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_4uf')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_4uf')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopyPipeline_Parquet')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_xrf",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "files/sales_data/posparquet/"
							},
							{
								"name": "Destination",
								"value": "dbo.SalesDataParquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"writeBehavior": "Upsert",
								"upsertSettings": {
									"keys": [
										"sale_id",
										"product_id"
									],
									"interimSchemaName": ""
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sale_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "sale_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "product_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "product_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "quantity",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "quantity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "price",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "total_amount",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "total_amount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sale_date",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "sale_date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "region",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "region",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_xrf",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_xrf",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-11T07:25:40Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_xrf')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_xrf')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_4uf')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "sale_id",
						"type": "varchar"
					},
					{
						"name": "product_id",
						"type": "varchar"
					},
					{
						"name": "product_name",
						"type": "varchar"
					},
					{
						"name": "quantity",
						"type": "varchar"
					},
					{
						"name": "price",
						"type": "varchar"
					},
					{
						"name": "total_amount",
						"type": "varchar"
					},
					{
						"name": "sale_date",
						"type": "varchar"
					},
					{
						"name": "region",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesDataJSON"
				},
				"sqlPool": {
					"referenceName": "dp203azuresqlpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dp203azuresqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_kn4')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "sale_id",
						"type": "varchar"
					},
					{
						"name": "product_id",
						"type": "varchar"
					},
					{
						"name": "product_name",
						"type": "varchar"
					},
					{
						"name": "quantity",
						"type": "varchar"
					},
					{
						"name": "price",
						"type": "varchar"
					},
					{
						"name": "total_amount",
						"type": "varchar"
					},
					{
						"name": "sale_date",
						"type": "varchar"
					},
					{
						"name": "region",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesDataCSV"
				},
				"sqlPool": {
					"referenceName": "dp203azuresqlpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dp203azuresqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_xrf')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "sale_id",
						"type": "varchar"
					},
					{
						"name": "product_id",
						"type": "varchar"
					},
					{
						"name": "product_name",
						"type": "varchar"
					},
					{
						"name": "quantity",
						"type": "varchar"
					},
					{
						"name": "price",
						"type": "varchar"
					},
					{
						"name": "total_amount",
						"type": "varchar"
					},
					{
						"name": "sale_date",
						"type": "varchar"
					},
					{
						"name": "region",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesDataParquet"
				},
				"sqlPool": {
					"referenceName": "dp203azuresqlpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dp203azuresqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_4uf')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dp203rishabsaw-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sales_data/onlinetransaction",
						"fileSystem": "files"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"sale_id": {
							"type": "string"
						},
						"product_id": {
							"type": "string"
						},
						"product_name": {
							"type": "string"
						},
						"quantity": {
							"type": "number"
						},
						"price": {
							"type": "number"
						},
						"total_amount": {
							"type": "number"
						},
						"sale_date": {
							"type": "string"
						},
						"region": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dp203rishabsaw-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_kn4')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dp203rishabsaw-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sales_data/poscsv",
						"fileSystem": "files"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sale_id",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "product_name",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					},
					{
						"name": "total_amount",
						"type": "String"
					},
					{
						"name": "sale_date",
						"type": "String"
					},
					{
						"name": "region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dp203rishabsaw-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_xrf')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dp203rishabsaw-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sales_data/posparquet",
						"fileSystem": "files"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "sale_id",
						"type": "UTF8"
					},
					{
						"name": "product_id",
						"type": "UTF8"
					},
					{
						"name": "product_name",
						"type": "UTF8"
					},
					{
						"name": "quantity",
						"type": "DOUBLE"
					},
					{
						"name": "price",
						"type": "DOUBLE"
					},
					{
						"name": "total_amount",
						"type": "DOUBLE"
					},
					{
						"name": "sale_date",
						"type": "UTF8"
					},
					{
						"name": "region",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dp203rishabsaw-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dp203rishabsaw-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('dp203rishabsaw-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dp203rishabsaw-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dp203rishabsaw-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLScript Creating Output Table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TABLE [dbo].[SalesDataTransformed]\n( \n\t[sale_id] [varchar](50)  NOT NULL,\n\t[product_id] [varchar](50)  NULL,\n\t[product_name] [varchar](200)  NULL,\n\t[quantity] [varchar](50)  NULL,\n\t[price] [varchar](50)  NULL,\n\t[total_amount] [varchar](50)  NULL,\n\t[sale_date] [varchar](50)  NULL,\n\t[region] [varchar](50)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [sale_id] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dp203azuresqlpool",
						"poolName": "dp203azuresqlpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLScript Creating Table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Creating Table for Importing data",
				"content": {
					"query": "SET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TABLE [dbo].[SalesDataCSV]\n( \n\t[sale_id] [varchar](50)  NOT NULL,\n\t[product_id] [varchar](50)  NULL,\n\t[product_name] [varchar](200)  NULL,\n\t[quantity] [varchar](50)  NULL,\n\t[price] [varchar](50)  NULL,\n\t[total_amount] [varchar](50)  NULL,\n\t[sale_date] [varchar](50)  NULL,\n\t[region] [varchar](50)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [sale_id] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TABLE [dbo].[SalesDataJSON]\n( \n\t[sale_id] [varchar](50)  NOT NULL,\n\t[product_id] [varchar](50)  NULL,\n\t[product_name] [varchar](200)  NULL,\n\t[quantity] [varchar](50)  NULL,\n\t[price] [varchar](50)  NULL,\n\t[total_amount] [varchar](50)  NULL,\n\t[sale_date] [varchar](50)  NULL,\n\t[region] [varchar](50)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [sale_id] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TABLE [dbo].[SalesDataParquet]\n( \n\t[sale_id] [varchar](50)  NOT NULL,\n\t[product_id] [varchar](50)  NULL,\n\t[product_name] [varchar](200)  NULL,\n\t[quantity] [varchar](50)  NULL,\n\t[price] [varchar](50)  NULL,\n\t[total_amount] [varchar](50)  NULL,\n\t[sale_date] [varchar](50)  NULL,\n\t[region] [varchar](50)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [sale_id] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dp203azuresqlpool",
						"poolName": "dp203azuresqlpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Transformed_Data_Script')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "dp203apache1",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "985600c2-d927-491b-bf92-da5f94399a0f"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/ade6f070-898b-4abd-9943-3746b0fac3a2/resourceGroups/dp203rishabcapstoneproject/providers/Microsoft.Synapse/workspaces/dp203rishabsaw/bigDataPools/dp203apache1",
						"name": "dp203apache1",
						"type": "Spark",
						"endpoint": "https://dp203rishabsaw.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/dp203apache1",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.4",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"**Appending the Data Tables**"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\r\n",
							"import org.apache.spark.sql.functions.trim\r\n",
							"import org.apache.spark.sql.functions.{col, date_format}\r\n",
							"\r\n",
							"\r\n",
							"\r\n",
							"//Reading data from staging tables\r\n",
							"var ot_df = spark.read.synapsesql(\"dp203azuresqlpool.dbo.SalesDataJSON\") \r\n",
							"ot_df = ot_df.withColumn(\"source\", lit(\"Online Transaction\"))\r\n",
							"\r\n",
							"var csv_df = spark.read.synapsesql(\"dp203azuresqlpool.dbo.SalesDataCSV\") \r\n",
							"csv_df = csv_df.withColumn(\"source\", lit(\"CSV\"))\r\n",
							"\r\n",
							"var parq_df = spark.read.synapsesql(\"dp203azuresqlpool.dbo.SalesDataParquet\") \r\n",
							"parq_df = parq_df.withColumn(\"source\", lit(\"Parquet\"))\r\n",
							"\r\n",
							"//Appending the dataframes\r\n",
							"var df = ot_df.union(csv_df).union(parq_df)\r\n",
							"\r\n",
							"//Replacing NULL Values\r\n",
							"df = df.withColumn(\"quantity\", when(col(\"quantity\").isNull,col(\"total_amount\")/col(\"price\")).otherwise(col(\"quantity\")))\r\n",
							"\r\n",
							"df = df.withColumn(\"price\", when(col(\"price\").isNull,col(\"total_amount\")/col(\"quantity\")).otherwise(col(\"price\")))\r\n",
							"\r\n",
							"df = df.withColumn(\"total_amount\", when(col(\"total_amount\").isNull,col(\"price\")*col(\"quantity\")).otherwise(col(\"total_amount\")))\r\n",
							"\r\n",
							"//Removing time from data column\r\n",
							"df = df.withColumn(\"sale_date_new\", split(col(\"sale_date\"), \" \").getItem(0))\r\n",
							"\r\n",
							"//Creating year column from sale date\r\n",
							"df = df.withColumn(\"year\", split(col(\"sale_date_new\"), \"-\").getItem(0))\r\n",
							"\r\n",
							"//Rounding amount to 2 decimal places\r\n",
							"df = df.withColumn(\"total_amount\", bround(col(\"total_amount\"), 2))\r\n",
							"\r\n",
							"val adlsPath = \"abfss://files@dp203rishabsa.dfs.core.windows.net/TransformedDataOutput/TransformedData.csv\"\r\n",
							"\r\n",
							"// Write DataFrame to ADLS in CSV format\r\n",
							"df.write\r\n",
							"  .format(\"csv\")\r\n",
							"  .option(\"header\", \"true\")\r\n",
							"  .mode(\"overwrite\")\r\n",
							"  .save(adlsPath)\r\n",
							"\r\n",
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dp203apache')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 5
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 15,
					"minNodeCount": 3
				},
				"nodeCount": 3,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.4",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "southeastasia"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dp203apache1')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.4",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "southeastasia"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dp203azuresqlpool')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "southeastasia"
		}
	]
}